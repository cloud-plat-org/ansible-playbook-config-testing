name: Ansible CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.yml'
      - '**/*.yaml'
      - '.ansible-lint'
      - 'requirements*.txt'
  push:
    branches: [ main ]
    paths:
      - '**/*.yml'
      - '**/*.yaml'
      - '.ansible-lint'
      - 'requirements*.txt'

jobs:
  lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible-lint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Run Ansible Lint
      run: |
        echo "üîç Ansible Lint version:"
        ansible-lint --version
        echo ""
        echo "üìã Running Ansible Lint on all playbooks..."
        ansible-lint . --verbose
    
    - name: Upload lint results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ansible-lint-results
        path: |
          .ansible-lint-cache/
          *.log
        retention-days: 7

  syntax-check:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible-core
    
    - name: Find Ansible playbooks
      id: find-playbooks
      run: |
        echo "playbooks=$(find . -name '*.yml' -o -name '*.yaml' | grep -v '.github' | tr '\n' ' ')" >> $GITHUB_OUTPUT
    
    - name: Run Ansible Syntax Check
      if: steps.find-playbooks.outputs.playbooks != ''
      run: |
        echo "üîç Checking syntax for playbooks..."
        for playbook in ${{ steps.find-playbooks.outputs.playbooks }}; do
          echo "Checking: $playbook"
          ansible-playbook --syntax-check "$playbook" || exit 1
        done
        echo "‚úÖ All playbooks passed syntax check"
    
    - name: No playbooks found
      if: steps.find-playbooks.outputs.playbooks == ''
      run: |
        echo "‚ÑπÔ∏è No Ansible playbooks found to check"

  security-scan:
    name: Ansible Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install ansible-lint[community]
    
    - name: Run security-focused linting
      run: |
        echo "üîí Running security-focused Ansible Lint..."
        ansible-lint . --profile production --skip-list yaml[line-length]
