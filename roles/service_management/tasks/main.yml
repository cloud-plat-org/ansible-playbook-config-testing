---
# Service Management Role - Production Ready with Error Handling
# Proper idempotency and graceful error handling

- name: "{{ service_action | title }} {{ service_name }} service"
  block:
    - name: "Ensure {{ service_name }} service is {{ service_states[service_action] | default('configured') }}"
      systemd:
        name: "{{ service_name }}"
        state: "{{ service_states[service_action] | default(omit) }}"
        enabled: "{{ service_enabled[service_action] | default(omit) }}"
      vars:
        service_states:
          stop: stopped
          start: started
          restart: restarted
        service_enabled:
          enable: yes
          disable: no
      register: service_result
      failed_when: false
      when: service_action != "status"

    - name: "Check {{ service_name }} service status"
      command: "systemctl status {{ service_name }} --no-pager -l"
      register: service_status
      changed_when: false
      failed_when: false
      when: service_action == "status"

    - name: "Handle service operation errors"
      debug:
        msg: "Warning: {{ service_name }} service operation failed - {{ service_result.msg | default('Unknown error') }}"
      when: 
        - service_action != "status"
        - service_result is defined
        - service_result.failed | default(false)